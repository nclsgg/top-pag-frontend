{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { signInSuccess, signFailure } from './actions';\nimport history from '../../../services/history';\nimport api from '../../../services/api';\nexport function* signIn({\n  payload\n}) {\n  try {\n    const email = payload.email,\n          password = payload.password;\n    const response = yield call(api.post, 'sessions', {\n      email,\n      password\n    });\n    const _response$data = response.data,\n          token = _response$data.token,\n          user = _response$data.user;\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    yield put(signInSuccess(token, user));\n    history.push('/main');\n  } catch (err) {\n    toast.error('Falha na autenticação.');\n    yield put(signFailure());\n  }\n}\nexport function setToken({\n  payload\n}) {\n  if (!payload) return;\n  const token = payload.auth.token;\n\n  if (token) {\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n  }\n}\nexport default all([takeLatest('persist/REHYDRATE', setToken), takeLatest('@auth/SIGN_IN_REQUEST', signIn)]);","map":{"version":3,"sources":["/home/ncls/Área de Trabalho/TopPag-FrontEnd/top-pag-frontend/frontend/src/store/modules/auth/sagas.js"],"names":["takeLatest","call","put","all","toast","signInSuccess","signFailure","history","api","signIn","payload","email","password","response","post","data","token","user","defaults","headers","Authorization","push","err","error","setToken","auth"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,WAA3C;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AAAA,UACMC,KADN,GAC0BD,OAD1B,CACMC,KADN;AAAA,UACaC,QADb,GAC0BF,OAD1B,CACaE,QADb;AAGF,UAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACO,GAAG,CAACM,IAAL,EAAW,UAAX,EAAuB;AAChDH,MAAAA,KADgD;AAEhDC,MAAAA;AAFgD,KAAvB,CAA3B;AAHE,2BAQsBC,QAAQ,CAACE,IAR/B;AAAA,UAQMC,KARN,kBAQMA,KARN;AAAA,UAQaC,IARb,kBAQaA,IARb;AAUFT,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASJ,KAAM,EAArD;AAEA,UAAMd,GAAG,CAACG,aAAa,CAACW,KAAD,EAAQC,IAAR,CAAd,CAAT;AAEAV,IAAAA,OAAO,CAACc,IAAR,CAAa,OAAb;AACD,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,wBAAZ;AACA,UAAMrB,GAAG,CAACI,WAAW,EAAZ,CAAT;AACD;AACF;AAED,OAAO,SAASkB,QAAT,CAAkB;AAAEd,EAAAA;AAAF,CAAlB,EAA+B;AACpC,MAAI,CAACA,OAAL,EAAc;AADsB,QAG5BM,KAH4B,GAGlBN,OAAO,CAACe,IAHU,CAG5BT,KAH4B;;AAKpC,MAAIA,KAAJ,EAAW;AACTR,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASJ,KAAM,EAArD;AACD;AACF;AAED,eAAeb,GAAG,CAAC,CACjBH,UAAU,CAAC,mBAAD,EAAsBwB,QAAtB,CADO,EAEjBxB,UAAU,CAAC,uBAAD,EAA0BS,MAA1B,CAFO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport { signInSuccess, signFailure } from './actions';\n\nimport history from '../../../services/history';\nimport api from '../../../services/api';\n\nexport function* signIn({ payload }) {\n  try {\n    const { email, password } = payload;\n\n    const response = yield call(api.post, 'sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n\n    yield put(signInSuccess(token, user));\n\n    history.push('/main');\n  } catch (err) {\n    toast.error('Falha na autenticação.');\n    yield put(signFailure());\n  }\n}\n\nexport function setToken({ payload }) {\n  if (!payload) return;\n\n  const { token } = payload.auth;\n\n  if (token) {\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n  }\n}\n\nexport default all([\n  takeLatest('persist/REHYDRATE', setToken),\n  takeLatest('@auth/SIGN_IN_REQUEST', signIn),\n]);\n"]},"metadata":{},"sourceType":"module"}